name: build_linux
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build_linux:
    name: Build Linux
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y ocl-icd-libopencl1 opencl-headers ocl-icd-opencl-dev liboctave-dev
      - name: Update RCS keywords
        run: |
          printf '\n[filter "rcs-keywords"]\n\tclean  = .git_filters/rcs-keywords.clean\n\tsmudge = .git_filters/rcs-keywords.smudge %f\n' >> .git/config
          rm -rf src/*.c
          git checkout src/*.c
      - name: Build mmclab for Octave
        run: |
          cd src
          make oct
          ldd ../mmclab/mmc.mex
      - name: Build binary
        run: |
          cd src
          make clean
          make AR=c++ EXTRALIB="-static-libstdc++ -static-libgcc -Wl,-Bdynamic -lOpenCL -Wl,-Bstatic -lm -lz"
          ldd bin/mmc
      - name: Upload mmclab package
        if: runner.name == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: mmclab-linux-x64_64-${{ github.ref_name }}
          path: mmclab
      - name: Create package folder
        run: |
          mkdir packages
      - name: Zip mmclab
        run: |
          zip -FSr packages/mmclab-linux-x64_64-${{ github.ref_name }}.zip mmclab
      - name: Prepare mmc package
        run: |
          mv src/bin .
          rm -rf .git mmclab webmmc commons src .git_filters .gitattributes .github .travis.yml win32 deploy
          mkdir -p src/bin
          cd src/bin
          ln -s ../../bin/mmc .
          cd ../../
      - name: Upload mmc package
        if: runner.name == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: mmc-linux-x64_64-${{ github.ref_name }}
          path: .
      - name: Zip mmc
        run: |
          zip -FSr packages/mmc-linux-x64_64-${{ github.ref_name }}.zip . -x 'packages*'
      - name: Copy package to server
        if: runner.name == 'ubuntu-20.04' && ${{ github.repository_owner == 'fangq' && github.event_name != 'pull_request'}}
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.MCX_SERVER }}
          username: ${{ secrets.MCX_SERVER_USER }}
          ssh_private_key: ${{ secrets.MCX_SERVER_SSH_KEY }}
          local_path: "packages/*"
          remote_path: "fanglab/mcx.space/nightly/github"
	  sftpArgs: '-o ConnectTimeout=5'
