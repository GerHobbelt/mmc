name: build_linux
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build_linux:
    name: Build Linux
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y ocl-icd-libopencl1 opencl-headers ocl-icd-opencl-dev liboctave-dev upx-ucl
      - name: Update RCS keywords
        shell: bash
        run: |
          printf '\n[filter "rcs-keywords"]\n\tclean  = .git_filters/rcs-keywords.clean\n\tsmudge = .git_filters/rcs-keywords.smudge %f\n' >> .git/config
          rm -rf src/*.c
          git checkout src/*.c
      - name: Get current date
        id: date
        run: echo "RELEASE_VERSION=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Build mmclab for Octave
        shell: bash
        run: |
          cd src
          make oct >> ../mmclab/AUTO_BUILD_${{ env.RELEASE_VERSION }}.log 2>&1
          ldd ../mmclab/mmc.mex
      - name: Build binary
        shell: bash
        run: |
          cd src
          make clean
          make AR=c++ EXTRALIB="-static-libstdc++ -static-libgcc -lOpenCL -lm" &> ../AUTO_BUILD_${{ env.RELEASE_VERSION }}.log
          ldd bin/mmc
      # - name: Compress binary
      #  shell: bash
      #  run: |
      #    upx -9 mmclab/mmc.mex src/bin/mmc
      - name: Upload mmclab package
        uses: actions/upload-artifact@v3
        with:
          name: mmclab-linux-x64_64-${{ env.RELEASE_VERSION }}
          path: mmclab
      - name: Prepare mmc package
        shell: bash
        run: |
          mv src/bin .
          rm -rf .git mmclab webmmc commons src .git_filters .gitattributes .github .travis.yml win32 deploy
          mkdir -p src/bin
          cd src/bin
          ln -s ../../bin/mmc .
          cd ../../
      - name: Upload mmc package
        uses: actions/upload-artifact@v3
        with:
          name: mmc-linux-x64_64-${{ env.RELEASE_VERSION }}
          path: .
